{"version":3,"sources":["store/cardsFunctions.ts","store/cardsSlice.ts","store/hooks.ts","assets/images/hero.svg","assets/images/hp0.svg","assets/images/hp1.svg","images.ts","assets/images/foe1.svg","assets/images/foe2.svg","assets/images/foe3.svg","components/Cards.tsx","components/Stats.tsx","store/store.ts","components/App.tsx","reportWebVitals.js","index.tsx"],"names":["getRandomCard","id","range","x","y","chance","Math","random","type","hp","trunc","defaultHero","cardsSlice","createSlice","name","initialState","cards","Array","fill","scoreCount","hero","isGameOver","reducers","initFill","state","idCounter","i","j","move","payload","clickedCard","clickedX","clickedY","heroX","heroY","alert","isAvailable","hpChange","countHpChange","min","newCards","concat","rowType","swapRowType","row","flat","filter","el","lastRowEl","length","newCard","shiftCards","find","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","images","0","heal","5","hp0","6","7","hp1","8","foe","1","2","3","CardsPlace","toolkit","cardSlice","dispatch","useEffect","className","map","Cards","desc","props","character","image","onClick","src","alt","Stats","score","rootReducer","combineReducers","store","configureStore","reducer","App","target","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.154c8a2b.chunk.js","sourcesContent":["import { Card, Coords } from \"../types\";\r\n\r\nexport const isAvailable = ([clickedX, clickedY]:Coords, [heroX, heroY]:Coords):boolean => {\r\n  if (heroX === clickedX && heroY === clickedY) {\r\n    alert('It\\'s you dum!')\r\n    return false\r\n  }\r\n  return ((heroX + 1 === clickedX || \r\n        heroX - 1 === clickedX) && heroY === clickedY) ||\r\n        ((heroY + 1 === clickedY ||\r\n        heroY - 1 === clickedY) && heroX === clickedX)\r\n}\r\n\r\nexport const shiftCards = (cards:Card[][], hero:Card, clickedCard:Card) => {\r\n  const newCards:Card[][] = cards.concat()\r\n\r\n  const rowType = hero.x === clickedCard.x ? 'x' : 'y';\r\n  const swapRowType = rowType === 'x' ? 'y' : 'x';\r\n  \r\n  const row = newCards.flat().filter(el => el[rowType] === hero[rowType]);\r\n  \r\n  const lastRowEl = row[clickedCard[swapRowType] < hero[swapRowType] ? row.length - 1 : 0]\r\n  \r\n  newCards[clickedCard.x][clickedCard.y].type = hero.type;\r\n  newCards[clickedCard.x][clickedCard.y].hp = hero.hp\r\n  \r\n  if (lastRowEl.type !== 'hero') {\r\n    newCards[hero.x][hero.y].type = lastRowEl.type;\r\n    newCards[hero.x][hero.y].hp = lastRowEl.hp\r\n  }\r\n  \r\n  const newCard = getRandomCard(lastRowEl.id, [lastRowEl.x, lastRowEl.y], 2)\r\n  \r\n  lastRowEl.type = newCard.type;\r\n  lastRowEl.hp = newCard.hp;\r\n  \r\n  return newCards\r\n}\r\n\r\nexport const getRandomCard = (id:number, [x, y]:[number, number], range:number):Card => {\r\n  const chance = Math.random() * 8;\r\n  return { \r\n    id: id,\r\n    x: x,\r\n    y: y,\r\n    type: chance > range ? 'foe' : 'heal',\r\n    hp: chance > range ? Math.trunc(Math.random() * (4 - 1) + 1) : \r\n    Math.trunc(Math.random() * (9 - 5) + 5)\r\n  }\r\n}\r\n\r\nexport const countHpChange = (clickedCard:Card) => (clickedCard.type === 'foe' ? -1 : 1) * clickedCard.hp","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Card, State } from \"../types\";\r\nimport { isAvailable, shiftCards, getRandomCard, countHpChange } from \"./cardsFunctions\";\r\n\r\nconst defaultHero:Card = {\r\n  id: 4,\r\n  x: 1,\r\n  y: 1,\r\n  type: 'hero',\r\n  hp: 10\r\n}\r\n\r\nconst cardsSlice = createSlice({\r\n  name: 'cards',\r\n  initialState: {\r\n    cards: Array(3).fill([]),\r\n    scoreCount: 0,\r\n    hero: defaultHero,\r\n    isGameOver: true\r\n  },\r\n  reducers: {\r\n    initFill(state:State) {\r\n      let idCounter = -1\r\n      state.scoreCount = 0\r\n      state.hero = defaultHero\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          state.cards[i][j] = getRandomCard(++idCounter, [i, j], 3);\r\n        }\r\n      }\r\n      state.cards[state.hero.x][state.hero.y] = state.hero\r\n      state.isGameOver = false\r\n    }, \r\n    move(state:State, { payload: [x, y] }) {\r\n      const clickedCard = state.cards[x][y]\r\n\r\n      if (isAvailable([x, y], [state.hero.x, state.hero.y])) { \r\n        const hpChange =  countHpChange(clickedCard);\r\n\r\n        state.hero.hp = Math.min(state.hero.hp + hpChange, 10)\r\n  \r\n        if (state.hero.hp <= 0) {\r\n          alert(`Game over! Your score ${state.scoreCount}`)\r\n          state.isGameOver = true\r\n        }\r\n\r\n        if (hpChange < 0 && state.hero.hp > 0) {\r\n          state.scoreCount++\r\n        }\r\n        \r\n        state.cards = shiftCards(state.cards, state.hero, clickedCard); \r\n\r\n        state.hero = state.cards.flat().find((el:Card) => el.type === 'hero') as Card\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default cardsSlice.reducer\r\nexport const {initFill, move} = cardsSlice.actions","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","export default __webpack_public_path__ + \"static/media/hero.5b2609bc.svg\";","export default __webpack_public_path__ + \"static/media/hp0.013dd3c2.svg\";","export default __webpack_public_path__ + \"static/media/hp1.17d3ee61.svg\";","import hero from './assets/images/hero.svg'\r\nimport hp0 from './assets/images/hp0.svg'\r\nimport hp1 from './assets/images/hp1.svg'\r\nimport foe1 from './assets/images/foe1.svg'\r\nimport foe2 from './assets/images/foe2.svg'\r\nimport foe3 from './assets/images/foe3.svg'\r\nimport { Images } from './types'\r\n\r\nexport const images:Images = {\r\n  hero: {0: hero},\r\n  heal: {5: hp0, 6: hp0, 7: hp1, 8: hp1},\r\n  foe: {1: foe1, 2: foe2, 3: foe3},\r\n}","export default __webpack_public_path__ + \"static/media/foe1.c477179c.svg\";","export default __webpack_public_path__ + \"static/media/foe2.91be41a9.svg\";","export default __webpack_public_path__ + \"static/media/foe3.b4c66bde.svg\";","import { Card } from '../types';\r\nimport { initFill, move } from '../store/cardsSlice';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks'\r\nimport { useEffect } from 'react';\r\n\r\nimport '../assets/styles/cards.css'\r\n\r\nimport { images } from '../images';\r\n\r\nexport function CardsPlace() {\r\n  const {cards, isGameOver} = useAppSelector(({cardSlice: toolkit}) => {\r\n    return {cards: toolkit.cards.flat(), isGameOver: toolkit.isGameOver}\r\n  })\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (isGameOver) dispatch(initFill())\r\n  }, [isGameOver])\r\n  \r\n  return (\r\n    <div className='cards-place'>\r\n      {cards.map((el:Card) => \r\n        <Cards desc={el} key={el.id}/>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function Cards(props:{desc:Card}) {\r\n  const dispatch = useAppDispatch()\r\n  const character = props.desc;\r\n\r\n  const image = images[character.type][character.type === 'hero' ? 0 : character.hp]\r\n\r\n  return (\r\n    <div \r\n      className={`card card-${character.type}`} \r\n      onClick={() => {dispatch(move([character.x, character.y]))}}>\r\n      <img \r\n        src = {image}\r\n        alt={character.type} \r\n        className='card-image'/>\r\n      <p className='card-text'> {character.hp}{character.type === 'hero' ? '/10' : ''}</p>\r\n    </div>\r\n  )\r\n}","import { useAppSelector } from '../store/hooks'\r\n\r\nexport function Stats () {\r\n  const score = useAppSelector(({cardSlice: toolkit}) => {\r\n    return toolkit.scoreCount\r\n  })\r\n  return (\r\n    <h3 className=\"stats\">\r\n      Score: {score}\r\n    </h3>\r\n  )\r\n}","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport cardSlice from './cardsSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  cardSlice: cardSlice\r\n})\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import \"../assets/styles/index.css\"\nimport \"../assets/styles/small.css\"\nimport { CardsPlace } from \"./Cards\";\nimport { Stats } from \"./Stats\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"root\">\n        <header>\n          <h1>Dungeon Cards</h1>\n        </header>\n        <main>\n            <Stats />\n            <CardsPlace />\n        </main>\n        <footer>\n          <a target=\"blank\" href=\"https://github.com/sweetcutewitch\">GitHub</a>\n          <a target=\"blank\" href=\"https://play.google.com/store/apps/details?id=com.The717pixels.DungeonCards&hl=ru&gl=US\">Original game</a>\n        </footer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}